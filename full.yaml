---
# Source: keycloak/templates/configmap-startup.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: release-name-keycloa-startup
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
data:
  keycloak.cli: |
    embed-server --server-config=standalone-ha.xml --std-out=echo
    batch
    
    echo Configuring node identifier
    
    ## Sets the node identifier to the node name (= pod name). Node identifiers have to be unique. They can have a
    ## maximum length of 23 characters. Thus, the chart's fullname template truncates its length accordingly.
    /subsystem=transactions:write-attribute(name=node-identifier, value=${jboss.node.name})
    
    echo Finished configuring node identifier
    
    run-batch
    stop-embedded-server
    
    
---
# Source: keycloak/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: release-name-keycloa
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
imagePullSecrets:
    []
    

---
# Source: keycloak/templates/rbac.yaml

kind: Role
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: release-name-keycloa
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
rules:
  - apiGroups:
    - ""
    resources:
    - pods
    verbs:
    - get
    - list
  
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: release-name-keycloa
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: release-name-keycloa
subjects:
  - kind: ServiceAccount
    name: release-name-keycloa
    namespace: "keycloak-code"

---
# Source: keycloak/templates/service-headless.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-keycloa-headless
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: headless
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name

---
# Source: keycloak/templates/service-http.yaml
apiVersion: v1
kind: Service
metadata:
  name: release-name-keycloa-http
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
    app.kubernetes.io/component: http
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 8443
      targetPort: https
      protocol: TCP
    - name: http-management
      port: 9990
      targetPort: http-management
      protocol: TCP
  selector:
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name

---
# Source: keycloak/templates/hpa.yaml

apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: release-name-keycloa
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: StatefulSet
    name: release-name-keycloa
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 80
          type: Utilization
      type: Resource
    
  behavior:
    scaleDown:
      policies:
      - periodSeconds: 300
        type: Pods
        value: 1
      stabilizationWindowSeconds: 300
    

---
# Source: keycloak/templates/statefulset.yaml
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: release-name-keycloa
  labels:
    helm.sh/chart: keycloak-10.1.0
    app.kubernetes.io/name: keycloak
    app.kubernetes.io/instance: release-name
    app.kubernetes.io/version: "12.0.4"
    app.kubernetes.io/managed-by: Tiller
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: keycloak
      app.kubernetes.io/instance: release-name
  serviceName: release-name-keycloa-headless
  podManagementPolicy: Parallel
  updateStrategy:
    type: RollingUpdate
  template:
    metadata:
      annotations:
        checksum/config-startup: a3e2339f197006f66862ebcdec47a176ba46f5205bbdfbbe676165eabeb55c92
        checksum/secrets: ca3d163bab055381827226140568f3bef7eaac187cebd76878e0b63e9e442356
      labels:
        app.kubernetes.io/name: keycloak
        app.kubernetes.io/instance: release-name
    spec:
      containers:
        - name: keycloak
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            
          image: "docker.io/jboss/keycloak:12.0.4"
          imagePullPolicy: IfNotPresent
          command:
            []
            
          args:
            []
            
          env:
            - name: KEYCLOAK_LOGLEVEL
              value: DEBUG
            - name: WILDFLY_LOGLEVEL
              value: DEBUG
            - name: CACHE_OWNERS_COUNT
              value: "10"
            - name: CACHE_OWNERS_AUTH_SESSIONS_COUNT
              value: "10"
            - name: KEYCLOAK_USER
              value: admin
            - name: DB_VENDOR
              value: postgres
            - name: DB_ADDR
              value: 10.128.0.23
            - name: DB_PORT
              value: "9999"
            - name: DB_DATABASE
              value: keycloak_code
            - name: DB_USER
              value: keycloak
            - name: DB_PASSWORD
              value: P@ssw0rd
            - name: KEYCLOAK_PASSWORD
              value: "P@ssw0rd"
            - name: JGROUPS_DISCOVERY_PROTOCOL
              value: kubernetes.KUBE_PING
            - name: KUBERNETES_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: PROXY_ADDRESS_FORWARDING
              value: "true"
            
          envFrom:
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: https
              containerPort: 8443
              protocol: TCP
            - name: http-management
              containerPort: 9990
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /auth/
              port: http
            initialDelaySeconds: 300
            timeoutSeconds: 5
            
          readinessProbe:
            httpGet:
              path: /auth/realms/master
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 1
            
          resources:
            {}
            
          volumeMounts:
            - name: startup
              mountPath: "/opt/jboss/startup-scripts/keycloak.cli"
              subPath: "keycloak.cli"
              readOnly: true
      serviceAccountName: release-name-keycloa
      securityContext:
        fsGroup: 1000
        
      enableServiceLinks: true
      restartPolicy: Always
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  app.kubernetes.io/name: keycloak
                  app.kubernetes.io/instance: release-name
                matchExpressions:
                  - key: app.kubernetes.io/component
                    operator: NotIn
                    values:
                      - test
              topologyKey: kubernetes.io/hostname
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    app.kubernetes.io/name: keycloak
                    app.kubernetes.io/instance: release-name
                  matchExpressions:
                    - key: app.kubernetes.io/component
                      operator: NotIn
                      values:
                        - test
                topologyKey: failure-domain.beta.kubernetes.io/zone
        
      terminationGracePeriodSeconds: 60
      volumes:
        - name: startup
          configMap:
            name: release-name-keycloa-startup
            defaultMode: 0555
            items:
              - key: keycloak.cli
                path: keycloak.cli

---
# Source: keycloak/templates/ingress.yaml

---
# Source: keycloak/templates/networkpolicy.yaml


---
# Source: keycloak/templates/poddisruptionbudget.yaml

---
# Source: keycloak/templates/prometheusrule.yaml

---
# Source: keycloak/templates/route.yaml

---
# Source: keycloak/templates/secrets.yaml

---
# Source: keycloak/templates/servicemonitor.yaml


---
# Source: keycloak/templates/test/configmap-test.yaml


---
# Source: keycloak/templates/test/pod-test.yaml


